p<-ggplot(econmath, aes(x = hsgpa, y = age)) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
ggplot(mtcars, aes(mpg, factor(cyl))) +
geom_violin()
p<-ggplot(econmath, aes(x = hsgpa, y = as.factor(age))) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(x = hsgpa, y = as.factor(age))) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(x = hsgpa, y = as.factor(econhs))) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(y = hsgpa, x = as.factor(econhs))) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(y = hsgpa, x = econhs)) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(y = hsgpa, x = as.factor(econhs))) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(y = hsgpa, x = as.factor(age))) +
geom_violin() +
labs(title = "Density of Economics Scores",
x = "High School GPA", y = "Density")
p
p<-ggplot(econmath, aes(y = score, x = hsgpa)) +
geom_point() +
geom_smooth(method = "lm")
labs(title = "Economics Grades and High School GPA",
x = "High School GPA", y = "Economics Score")
p
p<-ggplot(econmath, aes(y = score, x = hsgpa)) +
geom_point() +
geom_smooth(method = "loess")
labs(title = "Economics Grades and High School GPA",
x = "High School GPA", y = "Economics Score")
p<-ggplot(econmath, aes(y = score, x = hsgpa)) +
geom_point() +
geom_smooth(method = "loess")
labs(title = "Economics Grades and High School GPA",
x = "High School GPA", y = "Economics Score")
p<-ggplot(econmath, aes(y = score, x = hsgpa)) +
geom_point() +
geom_smooth(method = "loess") +
labs(title = "Economics Grades and High School GPA",
x = "High School GPA", y = "Economics Score")
p<-ggplot(econmath, aes(y = score, x = hsgpa)) +
geom_point() +
geom_smooth(method = "loess") +
labs(title = "Economics Grades and High School GPA",
x = "High School GPA", y = "Economics Score")
p<-ggplot(econmath, aes(y = score, x = hsgpa)) +
geom_point() +
geom_smooth(method = "loess") +
labs(title = "Economics Grades and High School GPA",
x = "High School GPA", y = "Economics Score")
p
data <- tibble(x = runif(1000, min = 0, max = 1))
View(data)
data <- tibble(x = runif(1000, min = 0, max = 25))
View(data)
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5x^2 + rnorm(0,1))
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5x^2 + rnorm(1000,0,1))
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,1))
View(data)
ggplot(data, x = x, y = y) + geom_point()
ggplot(data, aes(x = x, y = y)) + geom_point()
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,10))
ggplot(data, aes(x = x, y = y)) + geom_point()
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,40))
ggplot(data, aes(x = x, y = y)) + geom_point()
ggplot(data, aes(x = x, y = y)) + geom_point() + geom_smooth(method = "lm")
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data <- tibble(x = runif(1000, min = 0, max = 25),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data <- tibble(x = rnorm(1000, mean = 0, sd = 10),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data <- tibble(x = rnorm(1000, mean = 20, sd = 10),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data <- tibble(x = runif(100000, min = 0, max = 20),
y = 1 + x + 0.5*x^2 + rnorm(100000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
lm(y ~ x, data = data)
data %<>% mutate(x2 = x^2)
library(magrittr)
data %<>% mutate(x2 = x^2)
cov(data$x, data$x2)
var(data$x)
670.8064/33.48737
cov(data$y, data$x2)
cov(data$y, data$x)
cov(data$y, data$x)/var(data$x)
data <- tibble(x = rnorm(100000, mean = 20, sd = 5),
y = 1 + x + 0.5*x^2 + rnorm(100000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data <- tibble(x = rnorm(1000, mean = 30, sd = 5),
y = 1 + x + 0.5*x^2 + rnorm(1000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
lm(y ~ x, data = data)
cov(data$x, data$x2)
data %<>% mutate(x2 = x^2)
cov(data$x, data$x2)
corr(data$x, data$x2)
cor(data$x, data$x2)
30^3 + 3*30*25 - 30*(30^2 + 25)
mean(data$x2)
data <- tibble(x = rnorm(10000,0,5),
y = 1 + x + 0.5*x^2 + rnorm(10000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data <- tibble(x = rnorm(10000,30,5),
y = 1 + x + 0.5*x^2 + rnorm(10000,0,40))
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_function(fun = function(x) 1 + x + 0.5*x^2)
data %<>% mutate(x2 = x^2)
mean(data$x2)
1 + 30 + 925/2
data <- tibble(x = rnorm(100000,30,5),
y = 1 + x + 0.5*x^2 + rnorm(100000,0,40))
lm(y ~ x, data = data)
493.5-900
data <- tibble(x = rnorm(100000,30,5),
y = 1 + x + 0.5*x^2 + rnorm(100000,0,40))
25 + 0.5*(30^3 + 3*30*25-30*(30^2+25))
775/25
1 + 30 + 0.5*(25 + 30^2)
493.5 - 31*30
ggplot() +
geom_function(fun = function(x) 1 + x + 0.5*x^2) +
geom_function(fun = function(x) 436.5 + 31*x )
ggplot() +
geom_function(fun = function(x) 1 + x + 0.5*x^2) +
geom_function(fun = function(x) -436.5 + 31*x )
ggplot() +
geom_function(fun = function(x) 1 + x + 0.5*x^2) +
geom_function(fun = function(x) -436.5 + 31*x ) +
xlim(0,50)
library(vtable)
setwd("~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC655/Fall-2023/ec655f23/slides/ols")
setwd("~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC655/Fall-2023")
setwd("~/Library/CloudStorage/OneDrive-WilfridLaurierUniversity/Teaching/EC655/Fall-2023/ec655f23/assignments/files")
potential <- read_csv("a2potential.csv")
library(tidyverse)
potential <- read_csv("a2potential.csv")
View(potential)
View(potential)
potential <- read_csv("a2potential.csv")
View(potential)
ggplot(potential, aes(x = y1)) + geom_density()
ggplot(potential) + geom_density(aes(x = y1)) + geom_density(aes(x = y0))
library(magrittr)
potential %<>% mutate(treateff = y1=y0)
potential %<>% mutate(treateff = y1-y0)
View(potential)
summary(potential)
potential <- tibble(
y0 = 6 + rnorm(0,3)
)
ggplot(potential, aes(x = y0)) + geom_density()
potential <- tibble(y0 = 6 + rnorm(0,3))
potential <- data.frame(y0 = 6 + rnorm(0,3))
potential <- tibble(
y0 = 6 + rnorm(1000,0,3)
)
ggplot(potential, aes(x = y0)) + geom_density()
potential <- tibble(
y0 = 6 + rnorm(1000,0,3),
y1 = 8 + rnorm(1000,0,3)
)
ggplot(potential) + geom_density(aes(x = y1)) + geom_density(aes(x = y0))
potential %<>% mutate(treateff = y1-y0)
ggplot(potential) + geom_density(aes(x = treateff))
potential <- tibble(
y0 = 6 + rnorm(1000,0,3),
y1 = 8 + rnorm(1000,0,1)
)
potential %<>% mutate(treateff = y1-y0)
ggplot(potential) + geom_density(aes(x = treateff))
coord_dag<-list(x = c(x = 1, w = 0, y = 2, u=2), y = c(x = 0, w = 1, y = 1, u=0))
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u" | to == "u", "dashed", "solid"))
library(ggthemes)
library(ggdag)
coord_dag<-list(x = c(x = 1, w = 0, y = 2, u=2), y = c(x = 0, w = 1, y = 1, u=0))
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u" | to == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(A = 0, S = 0, Y = 1, P = 1, F = 1.5), y = c(A = 0, S = 1, Y = 0, P = 1, F = 1))
dag <- dagify(y~P + A + F, P ~ F + S, A~ P + S, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u" | to == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(A = 0, S = 0, Y = 1, P = 1, F = 1.5), y = c(A = 0, S = 1, Y = 0, P = 1, F = 1))
dag <- dagify(Y~P + A + F, P ~ F + S, A~ P + S, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u" | to == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(A = 0, S = 0, Y = 1, P = 1, F = 1.5), y = c(A = 0, S = 1, Y = 0, P = 1, F = 1))
dag <- dagify(Y~P + A + F, P ~ F + S, A~ P + S, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "F" | to == "Y" | name == "F" | to == "P" , "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(A = 0, S = 0, Y = 1, P = 1, F = 1.5), y = c(A = 0, S = 1, Y = 0, P = 1, F = 1))
dag <- dagify(Y~P + A + F, P ~ F + S, A~ P + S, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "F" & to == "Y" | name == "F" & to == "P" , "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
?sleep75
library(wooldridge)
?sleep75
data <- sleep75
coord_dag<-list(x = c(A = 0, S = 0, Y = 1, P = 1, F = 1.5), y = c(A = 0, S = 1, Y = 0, P = 1, F = 1))
dag <- dagify(Y~P + A + F, P ~ F + S, A~ P + S, coords = coord_dag) %>%
tidy_dagitty()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(A = 0, S = 0, Y = 1, P = 1, F = 1.5), y = c(A = 0, S = 1, Y = 0, P = 1, F = 1))
dag <- dagify(Y~P + A + F, P ~ F + S, A~ P + S, coords = coord_dag) %>%
tidy_dagitty()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges() +
geom_dag_text() +
theme_dag()
library(tidyverse)
library(magrittr)
library(ggthemes)
library(car)
library(lmtest)
library(sandwich)
library(vtable)
library(AER)
set.seed(9810078)
#Create data with constant treatment effects.  In this setup
#we also create a potential treatment, which is what people
#do in the event they are assigned to treatment (w1) and when
#they are not (w0).  The key thing to remember is that people
#assigned to treatment might not actually take it (w1 = 0),
#and people not assigned to treatment might take it (w0 = 1).
#Below, it is set up so that everyone who is assigned to treatment
#actually takes it, and people not assigned to treatment take it
#when y0 < 1.  Assignment to treatment (z) is completely random.
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta,
y1 = y0 + 5,
w0 = if_else(y0 < 1,1,0),
w1 = 1,
z = if_else(runif(100000) > .5,1,0),
w = w0 + (w1 - w0)*z,
y = y0 + (y1 - y0)*w)
View(data)
sumtable(data, summ=c('notNA(x)','mean(x)'), group = 'w')
ggplot(data, aes(x=y0, color=as.factor(w))) +
geom_density(alpha = .4, size=2) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Distribution of Y0")
ggplot(data, aes(x=y1, color=as.factor(w))) +
geom_density(alpha = .4, size=2) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Distribution of Y1")
lm(y ~ w, data = data)
sumtable(data, summ=c('notNA(x)','mean(x)'), group = 'z')
ggplot(data, aes(x=y0, color=as.factor(z))) +
geom_density(alpha = .4, size=2) +
theme_pander(nomargin=FALSE, boxes=TRUE) +
labs(title = "Distribution of Y0")
lm(y ~ z, data = data)
data %<>% mutate(treat = y1 - y0,
assign = w1 - w0,
prod = treat*assign)
summary(data$prod)
rf <- lm(y ~ z, data = data)
fs<- lm(w ~ z, data = data)
coef(rf)['z']/coef(fs)['z']
ols <- lm(y ~ w, data = data)
stargazer(ols, type = "text")
library(stargazer)
ols <- lm(y ~ w, data = data)
stargazer(ols, type = "text")
iv <- ivreg(y ~ w | z, data = data)
stargazer(ols iv, type = "text")
iv <- ivreg(y ~ w | z, data = data)
stargazer(ols, iv, type = "text")
library(estimatr)
iv_robust(y ~ w | z, data = data)
iv2<-iv_robust(y ~ w | z, data = data)
class(iv2)
class(ols)
iv2<-iv_robust(y ~ w | z, data = data, diagnostics = TRUE)
iv2
tidy(iv_robust(y ~ w | z, data = data, diagnostics = TRUE))
iv2<-tidy(iv_robust(y ~ w | z, data = data, diagnostics = TRUE))
View(iv2)
stargazer(iv2, type = "text")
install.packages("modelsummary")
iv2<-iv_robust(y ~ w | z, data = data, diagnostics = TRUE)
library(modelsummary)
modelsummary(iv2)
install.packages("insight")
modelsummary(iv2)
library(tidyverse)
library(magrittr)
library(ggthemes)
library(car)
library(lmtest)
library(sandwich)
library(vtable)
library(AER)
library(stargazer)
library(estimatr)
iv2 <- ivreg(y ~ w | z, data = data, diagnostics = TRUE)
iv2 <- iv_robust(y ~ w | z, data = data, diagnostics = TRUE)
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta,
y1 = y0 + 5,
w0 = if_else(y0 < 1,1,0),
w1 = 1,
z = if_else(runif(100000) > .5,1,0),
w = w0 + (w1 - w0)*z,
y = y0 + (y1 - y0)*w)
iv2 <- iv_robust(y ~ w | z, data = data, diagnostics = TRUE)
library(modelsummary)
modelsummary(iv2)
ols <- lm(y ~ w, data = data)
modelsummary(iv2, ols)
modelsummary(c(iv2, ols))
modelsummary(list(iv2, ols))
summary(iv2)
iv <- ivreg(y ~ w | z, data = data)
summary(iv)
summary(iv, diagnostics = TRUE)
iv <- iv_robust(y ~ w | z, data = data)
summary(iv)
iv <- iv_robust(y ~ w | z, data = data)
summary(iv, diagnostics = TRUE)
iv <- iv_robust(y ~ w | z, data = data, diagnostics = TRUE)
summary(iv)
modelsummary(list(ols, iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, vcov = vcovHC)
ols <- lm_robust(y ~ w, data = data)
ols <- lm_robust(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, vcov = vcovHC)
ols <- lm_robust(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE)
ols <- lm_robust(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all")
modelsummary(list("OLS" = ols, "TSLS" = iv),
stars = TRUE, metrics = "all")
install.packages("ivreg")
detach("package:AER", unload = TRUE)
library(ivreg)
iv <- ivreg(y ~ w | z, data = data, diagnostics = TRUE)
iv <- ivreg(y ~ w | z, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv),
stars = TRUE, metrics = "all")
ols <- lm_robust(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all")
ols <- lm(y ~ w, data = data)
ols <- lm_robust(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = vcovHC())
ols <- lm_robust(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = vcovHC
)
ols <- lm(y ~ w, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = vcovHC)
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = vcovHC(type = "HC1"))
modelsummary(list("OLS" = ols, "TSLS" = iv), gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = "HC1")
fs <- lm(w ~ z, data = data)
rf <- lm(y ~ z, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv, "First Stage" = fs,
"Reduced Form" = rf),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = "HC1")
modelsummary(list("OLS" = ols, "TSLS" = iv, "First Stage" = fs,
"Reduced Form" = rf),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all")
fs <- lm_robust(w ~ z, data = data)
rf <- lm(y ~ z, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv, "First Stage" = fs,
"Reduced Form" = rf),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = "HC1")
fs <- lm(w ~ z, data = data)
rf <- lm(y ~ z, data = data)
modelsummary(list("OLS" = ols, "TSLS" = iv, "First Stage" = fs,
"Reduced Form" = rf),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = "HC1")
data1 <- data.frame(y0 = 5 + rnorm(100000,0,3)) %>%
mutate(y1 = 10 + rnorm(100000,0,3),
w0 = if_else(y1 - y0 >= 7,1,0),
w1 = 1,
z = if_else(runif(100000) > .5,1,0),
w = w0 + (w1 - w0)*z,
y = y0 + (y1 - y0)*w,
treat = y1-y0)
#compute various treatment effects
#ATE
sumtable(data1,vars='treat', summ=c('notNA(x)','mean(x)'))
#LATE for compliers
sumtable(filter(data1, w1 == 1 & w0 == 0),vars='treat', summ=c('notNA(x)','mean(x)'))
#Treatment for always-takers
sumtable(filter(data1, w1 == 1 & w0 == 1),vars='treat', summ=c('notNA(x)','mean(x)'))
#If you run two-stage least squares, it produces the LATE for compliers
ivreg(y ~ w | z, data = data1)
sumtable(filter(data1, w1 == 1 & w0 == 0),vars='treat', summ=c('notNA(x)','mean(x)'))
iv2<-ivreg(y ~ w | z, data = data1)
modelsummary(list("TSLS" = iv2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = "HC1")
data2 <- data.frame(y0 = 5 + rnorm(100000,0,3)) %>%
mutate(y1 = 10 + rnorm(100000,0,3))
lq <- summary(data2$y1 -data2$y0)[2]
uq <- summary(data2$y1 -data2$y0)[5]
data2 %<>% mutate(w0 = if_else(y1-y0 >=uq | y1-y0 <= lq,1,0),
w1 = if_else(y1-y0 >= uq | y1-y0 <= lq,0,1),
z = if_else(runif(100000) > .5,1,0),
w = w0 + (w1 - w0)*z,
y = y0 + (y1 - y0)*w,
treat = y1-y0,
comply = if_else(w1 == 1 & w0 == 0,1,0))
#LATE for compliers
sumtable(filter(data2, w1 == 1 & w0 == 0),vars='treat', summ=c('notNA(x)','mean(x)'))
#LATE for defiers
sumtable(filter(data2, w1 == 0 & w0 == 1),vars='treat', summ=c('notNA(x)','mean(x)'))
#Reduced form equals zero because effect on compliers and defiers cancels
rf3 <- lm(y ~ z, data = data2)
fs3 <- lm(w ~ z, data = data2)
iv3<- ivreg(y ~ w | z, data = data2)
modelsummary(list("TSLS" = iv3, "First Stage" = fs3,
"Reduced Form" = rf3),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, metrics = "all", vcov = "HC1")
sumtable(filter(data2, w1 == 1 & w0 == 0),vars='treat', summ=c('notNA(x)','mean(x)'))
