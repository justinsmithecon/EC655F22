t = rep(1:T),
i = 1,
a = 1,
x = rnorm(10, 0, 1),
y = 9 - x + a + rnorm(T, 0, 1)
),
data2 <- tibble(
t = rep(1:T),
i = 2,
a = 12,
x = rnorm(10, 3, 1),
y = 9 - x + a + rnorm(T, 0, 1)
),
data3 <- tibble(
t = rep(1:T),
i = 3,
a = 22,
x = rnorm(10, 5, 1),
y = 9 - x + a + rnorm(T, 0, 1)
)) %>%
list.rbind()
ggplot(data, aes(y = y, x = x, color = as.factor(i))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black", alpha = .5, size = 1.5) +
theme_pander(nomargin = FALSE) +
labs(title = "Fixed Effects Estimator") +
guides(color=guide_legend(title="Individual"))
ggplot(data, aes(y = y, x = x, color = as.factor(i))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
theme_pander(nomargin = FALSE) +
labs(title = "Fixed Effects Estimator") +
guides(color=guide_legend(title="Individual"))
ggplot(data, aes(y = y, x = x, color = as.factor(i))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, alpha = .5, size = 1.5) +
theme_pander(nomargin = FALSE) +
labs(title = "Fixed Effects Estimator") +
guides(color=guide_legend(title="Individual"))
ggplot(data, aes(y = y, x = x, color = as.factor(i))) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, alpha = .2, size = 1.5) +
theme_pander(nomargin = FALSE) +
labs(title = "Fixed Effects Estimator") +
guides(color=guide_legend(title="Individual"))
library(plm)
library(tidyverse)
library(vtable)
library(plm)
library(magrittr)
library(stargazer)
library(modelsummary)
# set seed
set.seed(12345)
#First create data so that w is assigned randomly
create_panel_data <- function(N,T) {
panel_data <- crossing(ID = 1:N, t = 1:T) %>%
mutate(eta = rnorm(n(), mean=0, sd=10))
indiv_data <- data.frame(ID = 1:N,
a = rnorm(N,0,10))
panel_data %<>%
full_join(indiv_data, by = 'ID') %>%
mutate(y0 = 2 + a + eta,
y1 = y0 + 4,
w = ifelse(runif(n()) > 0.5 & t >= 3, 1, 0),
y = y0 + (y1 - y0)*w)
return(panel_data)
}
# get summary statistics
data <- create_panel_data(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
sumtable(data, vars = c("y", "w"))
# pooled OLS
model1 <- lm(y ~ w, data = data)
# fixed effects
model2 <- plm(y ~ w , data = data, model="within")
# dummy variable regression
model3 <- lm(y ~ w + factor(ID), data = data)
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
modelsummary(model1, model2, model3, model4, model5, type = "text", keep=c("w"), keep.stat = c("n"))
modelsummary(model1, model2, model3, model4, model5)
modelsummary(list("Pooled OLs" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type",
stars = TRUE, vcov = "HC1")
modelsummary(list("Pooled OLs" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = "HC1")
modelsummary(list("Pooled OLs" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = vcovPC(x, cluster="ID"))
modelsummary(list("Pooled OLs" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovPC(x, cluster="country"))
modelsummary(list("Pooled OLs" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ "ID"))
data <- create_panel_data(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
sumtable(data, vars = c("y", "w"))
# pooled OLS
model1 <- lm(y ~ w, data = data)
# fixed effects
model2 <- plm(y ~ w , data = data, model="within")
# dummy variable regression
model3 <- lm(y ~ w + factor(ID), data = data)
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ "ID"))
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ ID))
modelsummary(list("Pooled OLS" = model1),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ ID))
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ ID))
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ "ID"))
modelsummary(list("Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ "ID"))
install.packages("clubSandwich")
library(clubSandwich)
modelsummary(list("Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCR(x, cluster = ~ "ID"))
modelsummary(list("Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCR(x, cluster = ~ ID))
modelsummary(list("Fixed Effects" = model1),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCR(x, cluster = ~ ID))
modelsummary(list("Fixed Effects" = model1),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCL(x, cluster = ~ ID))
modelsummary(list("Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCR.plm(x, cluster = ~ ID))
modelsummary(list("Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE, vcov = function(x) vcovCR.plm(x, cluster = ID))
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|se_type", coef_omit = "ID",
stars = TRUE)
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2, "DVR" = model3, "First Diff" = model4, "Random Effects" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic", coef_omit = "ID",
stars = TRUE)
vcovcr(model2, cluster = ID)
vcovCR(model2, cluster = ID)
View(data)
model2
View(model2)
# fixed effects
model2 <- plm(y ~ w , data = data, model="within")
View(model2)
vcovCR(model2, cluster = "ID")
vcovCR(model2, type = "HC1", cluster = "ID")
vcovCR(model2, type = "CR1", cluster = "ID")
vcovCL(model2, type = "HC1", cluster = "ID")
lm(y ~ w, data = data)
summary(lm(y ~ w, data = data))
summary(feols(y ~ w, data = data))
summary(feols(y ~ w, data = data, cluster = "ID"))
model1 <- lm(y ~ w, data = data)
model2 <- feols(y ~ w, data = data)
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic", coef_omit = "ID",
stars = TRUE)
model1 <- lm(y ~ w, data = data)
model2 <- feols(y ~ w, data = data, cluster = "ID")
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic", coef_omit = "ID",
stars = TRUE)
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F", coef_omit = "ID",
stars = TRUE)
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
model3 < - felm(y ~w | ID|0|ID, data= data)
library(lfe)
model3 < - felm(y ~w | ID|0|ID, data= data)
model3 < - felm(y ~w | ID | 0 | ID, data= data)
model3 <- felm(y ~w | ID | 0 | ID, data= data)
modelsummary(list("Pooled OLS" = model1, "Fixed Effects" = model2, "FE2" = model3),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F", coef_omit = "ID",
stars = TRUE)
model3 < - felm(d.y ~ d.w data= data)
model4 < - felm(d.y ~ d.w, data= data)
data %<>% pdata.frame(index = c("ID", "t"))
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov
vcovCL(model4, cluster = "ID")
vcovCL(model4, cluster = ID)
vcovCL(model4, cluster = ~ ID)
vcovCR(model4, cluster = ~ ID)
vcovCR(model4, cluster = "ID")
vcovCR(model4, cluster = "ID", type = "CR0")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR0")
model4$vcov
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F", coef_omit = "ID",
stars = TRUE)
data <- create_panel_data(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
sumtable(data, vars = c("y", "w"))
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F", coef_omit = "ID",
stars = TRUE)
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|setype", coef_omit = "ID",
stars = TRUE)
create_panel_data2 <- function(N,T) {
panel_data <- crossing(ID = 1:N, t = 1:T) %>%
mutate(eta = rnorm(n(), mean=0, sd=10))
indiv_data <- data.frame(ID = 1:N,
a = rnorm(N,0,10))
panel_data %<>%
full_join(indiv_data, by = 'ID') %>%
mutate(y0 = 2 + a + eta,
y1 = y0 + 4,
w = ifelse(a > 15 & t >= 3, 1, 0),
y = y0 + (y1 - y0)*w)
return(panel_data)
}
data <- create_panel_data2(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type", coef_omit = "ID",
stars = TRUE)
create_panel_data2 <- function(N,T) {
panel_data <- crossing(ID = 1:N, t = 1:T) %>%
mutate(eta = rnorm(n(), mean=0, sd=10))
indiv_data <- data.frame(ID = 1:N,
a = rnorm(N,0,10))
panel_data %<>%
full_join(indiv_data, by = 'ID') %>%
mutate(y0 = 2 + a + eta,
y1 = y0 + 4,
w = ifelse(a > 15 & t >= 3, 1, 0),
y = y0 + (y1 - y0)*w)
return(panel_data)
}
data <- create_panel_data2(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type", coef_omit = "ID",
stars = TRUE)
create_panel_data2 <- function(N,T) {
panel_data <- crossing(ID = 1:N, t = 1:T) %>%
mutate(eta = rnorm(n(), mean=0, sd=10))
indiv_data <- data.frame(ID = 1:N,
a = rnorm(N,0,10))
panel_data %<>%
full_join(indiv_data, by = 'ID') %>%
mutate(y0 = 2 + a + eta,
y1 = y0 + 4,
w = ifelse(a > 15 & t >= 3, 1, 0),
y = y0 + (y1 - y0)*w)
return(panel_data)
}
data <- create_panel_data2(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type", coef_omit = "ID",
stars = TRUE)
create_panel_data2 <- function(N,T) {
panel_data <- crossing(ID = 1:N, t = 1:T) %>%
mutate(eta = rnorm(n(), mean=0, sd=10))
indiv_data <- data.frame(ID = 1:N,
a = rnorm(N,0,10))
panel_data %<>%
full_join(indiv_data, by = 'ID') %>%
mutate(y0 = 2 + a + eta,
y1 = y0 + 4,
w = ifelse(a > 15 & t >= 3, 1, 0),
y = y0 + (y1 - y0)*w)
return(panel_data)
}
data <- create_panel_data2(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type", coef_omit = "ID",
stars = TRUE)
create_panel_data2 <- function(N,T) {
panel_data <- crossing(ID = 1:N, t = 1:T) %>%
mutate(eta = rnorm(n(), mean=0, sd=10))
indiv_data <- data.frame(ID = 1:N,
a = rnorm(N,0,10))
panel_data %<>%
full_join(indiv_data, by = 'ID') %>%
mutate(y0 = 2 + a + eta,
y1 = y0 + 4,
w = ifelse(a > 15 & t >= 3, 1, 0),
y = y0 + (y1 - y0)*w)
return(panel_data)
}
data <- create_panel_data2(500,5)
data %<>% pdata.frame(index = c("ID", "t"))
# pooled OLS
model1 <- feols(y ~ w, data = data, cluster = "ID")
# fixed effects
model2 <- feols(y ~ w | ID, data = data, cluster = "ID")
# dummy variable regression
model3 <- feols(y ~ w + factor(ID), data = data, cluster = "ID")
# first differencing
model4 <- plm(y ~ w , data = data, model="fd")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
# random effects
model5 <- plm(y ~ w , data = data, model="random")
model4$vcov <- vcovCR(model4, cluster = "ID", type = "CR1S")
modelsummary(list("Pooled OLS" = model1, "FE" = model2, "DVR" = model3, "FD" = model4, "RE" = model5),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type", coef_omit = "ID",
stars = TRUE)
install.packages("lme4")
# Load required libraries
library(tidyverse)
# Set seed for reproducibility
set.seed(12345)
# Create a data frame with 500000 observations
data <- tibble(eta = rnorm(500000, mean = 0, sd = 10),
y0star = 2 + eta,
y0 = ifelse(y0star > 0, y0star, 0),
y1star = y0star + 5,
y1 = ifelse(y1star > 0, y1star, 0),
w = ifelse(runif(500000) > 0.5, 1, 0),
y = y0 + (y1 - y0) * w)
View(data)
ols_model <- lm(y ~ w, data = data)
summary(ols_model)
library(modelsummary)
library(fixest)
ols_model <- feols(y ~ w, data = data, vcov = "HC1")
ols_model <- feols(y ~ w, data = data, vcov = "HC1")
modelsummary(list("OLS" = ols_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
library(survival)
tobit_model <- survreg(Surv(y > 0, y) ~ w, data = data, dist = "gaussian", control = survreg.control(maxiter = 1000))
View(data)
ggplot(data, aes(x = y)) +
geom_histogram(bins = 100) +
labs(x = "y", y = "Count")
library(ggthemes)
ggplot(data, aes(x = y)) +
geom_histogram(bins = 100) +
labs(x = "y", y = "Count") +
theme_pander(nomargin = FALSE)
install.packages("VGAM")
library(VGAM)
tobit_model <- vglm(y ~ w, tobit(Lower = 0), data = data)
summary(tobit_model)
data <- tibble(eta = rnorm(50000, mean = 0, sd = 10),
y0star = 2 + eta,
y0 = ifelse(y0star > 0, y0star, 0),
y1star = y0star + 5,
y1 = ifelse(y1star > 0, y1star, 0),
w = ifelse(runif(50000) > 0.5, 1, 0),
y = y0 + (y1 - y0) * w)
# Examine the data
ggplot(data, aes(x = y)) +
geom_histogram(bins = 100) +
labs(x = "y", y = "Count") +
theme_pander(nomargin = FALSE)
ols_model <- feols(y ~ w, data = data, vcov = "HC1")
modelsummary(list("OLS" = ols_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
# Estimate the Tobit model
tobit_model <- vglm(y ~ w, tobit(Lower = 0), data = data)
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model"),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
library(AER)
library(AER)
tobit_model <- tobit(y ~ w, left= 0, data = data)
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
library(margins)
install.packages("margins")
library(margins)
margins_model <- margins(tobit_model, dydx = "w")
class(tobit_model)
install.packages("censReg")
library(censReg)
tobit_model <- censReg(y ~ w, data = data)
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
tobitmf <- margEff(tobit_model)
summary(tobitmf)
modelsummary(list("OLS" = ols_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
data <- tibble(eta = rnorm(50000, mean = 0, sd = 10),
y0star = 2 + eta,
y0 = ifelse(y0star > 0, y0star, 0),
y1star = y0star + 5,
y1 = ifelse(y1star > 0, y1star, 0),
w = ifelse(runif(50000) > 0.5, 1, 0),
y = y0 + (y1 - y0) * w,
treat = y1 - y0,
treatstar = y1star - y0star)
summary(data)
ols_model <- feols(y ~ w, data = data, vcov = "HC1")
modelsummary(list("OLS" = ols_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
# Estimate the Tobit model
tobit_model <- censReg(y ~ w, data = data)
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
# Marginal Effects
tobitmf <- margEff(tobit_model)
tobitmf
modelsummary(list("OLS" = ols_model, "Tobit" = tobit_model, "Tobit MF" = tobitmf),
gof_omit = "IC|Log|Adj|p\\.value|statistic|F|se_type",
stars = TRUE)
tobitmf <- margEff(tobit_model, calcVCov = TRUE)
tobitmg
tobitmf
tobit_model <- censReg(y ~ w, data = data)
margEff.censReg(tobit_model)
detach("package:censReg", unload = TRUE)
library(censReg)
censReg::margEff(tobit_model)
