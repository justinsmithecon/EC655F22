geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none")
library(ggthemes)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 2, y = 4, label = "y = x^2"), color = "red", angle = 45, box.padding = 0.5) +
geom_text_repel(aes(x = 5, y = 1.5, label = "y = 1"), color = "blue", angle = 45, box.padding = 0.5)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 2, y = 4, label = "y = x^2"), color = "red", angle = 45, box.padding = 0.5) +
geom_text_repel(aes(x = 5, y = 1.5, label = "y = 1"), color = "blue", angle = 45, box.padding = 0.5)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 75, label = "CEF"), color = "red", angle = 45, box.padding = 0.5) +
geom_text_repel(aes(x = 8, y = 1.5, label = "PRF"), color = "black", angle = 90, box.padding = 0.5)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 75, label = "CEF"), color = "red", angle = 45, box.padding = 0.5) +
geom_text_repel(aes(x = 8, y = 1.5, label = "PRF"), color = "black", angle = 0, box.padding = 0.5)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 75, label = "CEF"), color = "red", angle = 0, box.padding = 0.5) +
geom_text_repel(aes(x = 8, y = 1.5, label = "PRF"), color = "black", angle = 0, box.padding = 0.5)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 75, label = "CEF"), color = "red", angle = 0, box.padding = 0.5) +
geom_text_repel(aes(x = 8, y = 5, label = "PRF"), color = "black", angle = 0, box.padding = 0.5)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 75, label = "CEF"), color = "red", angle = 0) +
geom_text_repel(aes(x = 8, y = 5, label = "PRF"), color = "black", angle = 0)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 65, label = "CEF"), color = "red", angle = 0) +
geom_text_repel(aes(x = 8, y = 3, label = "PRF"), color = "black", angle = 0)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 70, label = "CEF"), color = "red", angle = 0) +
geom_text_repel(aes(x = 8, y = 4, label = "PRF"), color = "black", angle = 0)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 72, label = "CEF"), color = "red", angle = 0) +
geom_text_repel(aes(x = 8, y = 5, label = "PRF"), color = "black", angle = 0)
library(ggthemes)
library(ggrepel)
ggplot() +
geom_function(fun = function(x) x^2, color = "red") +
geom_abline(intercept = 1, slope = 0) +
labs(x = "x", y = "y", title = "Plot of CEF and PRF") +
theme_pander(nomargin = FALSE) +
xlim(0,10) +
theme(legend.position = "none") +
geom_text_repel(aes(x = 8, y = 72, label = "CEF"), color = "red", angle = 0) +
geom_text_repel(aes(x = 8, y = 4.5, label = "PRF"), color = "black", angle = 0)
library(daggity)
library(dagitty)
nodes <- c("x", "u", "y")
# Define the edges
edges <- c("x -> y", "u -> y")
# Create the DAG
dag <- dagitty(nodes = nodes, edges = edges)
library(dagitty)
nodes <- c("x", "u", "y")
# Define the edges
edges <- c("x -> y", "u -> y")
# Create the DAG
dag <- dagitty(nodes = nodes, edges = edges)
library(dagitty)
dag <- dagitty("dag {
x [pos=\"-0.5,0\"]
u [pos=\"0,0.5\"]
y [pos=\"0.5,0\"]
x -> y
u -> y
}")
# Plot the DAG
plot(dag)
our_dag <- ggdag::dagify(d ~ p,
m ~ d,
y ~ d,
y ~ m)
ggdag::ggdag(our_dag)
library(ggthemes)
our_dag <- ggdag::dagify(d ~ p,
m ~ d,
y ~ d,
y ~ m)
ggdag::ggdag(our_dag) %>% theme_pander(nomargin = FALSE)
ggdag::ggdag(our_dag) %>% theme_minimal()
ggdag::ggdag(our_dag) %>% theme_void()
ggdag::ggdag(our_dag) + theme_pander(nomargin = FALSE)
library(tidyverse)
library(ggdag)
dagify(x ~ y,
u ~ x,
u ~ y
)
dag<-dagify(x ~ y,
u ~ x,
u ~ y
)
ggdag(dag)
tidy_daggity(dag)
ggdag(dag, layout = circle)
ggdag(dag, layout = "circle")
dag<-dagify(x ~ y,
u ~ x,
u ~ y,
)
dag<-dagify(x ~ y,
u ~ x,
u ~ y, outcome = "y"
)
ggdag(dag, layout = "circle")
dag<-dagify(y ~ x,
x ~ u,
y ~ u, outcome = "y"
)
ggdag(dag, layout = "circle")
ggdag(dag, layout = "circle") + theme_void()
ggdag(dag, layout = "circle")
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
ggdag(dag, layout = "circle", coords = coord_dag)
dag<-dagify(y ~ x,
x ~ u,
y ~ u, coords = coord_dag
)
ggdag(dag, layout = "circle")
ggdag(dag, layout = "circle") + theme_void()
coord_dag<-list(x = c(u = 1, x = 0.5, y = 1.5), y = c(u = 0, x = 0.5, y = 0.5))
dag<-dagify(y ~ x,
x ~ u,
y ~ u
)
ggdag(dag, layout = "nicely") + theme_dag()
library(tidyverse)
library(vtable)
library(ggthemes)
library(ggdag)
knitr::opts_chunk$set(fig.width = 6, fig.asp = 0.618, fig.align = "center",
fig.retina = 3, out.width = "75%", collapse = TRUE)
dag
dag<- dagitty("dag{x -> y, u ->y, u ->x}")
library(dagitty)
dag<- dagitty("dag{x -> y, u ->y, u ->x}")
dag<- dagitty("dag{x -> y; u ->y; u ->x}")
ggdag(dag)
dag<- dagitty("dag{x -> y; u -->y; u -->x}")
dag <- dagitty("dag{
x -> y ; x <- u -> y
x [exposure]
y [outcome]
u [unobserved]
}")
ggdag(dag)
dag <- dagitty("mag{
x -> y ; x <-- u --> y
x [exposure]
y [outcome]
u [unobserved]
}")
dag <- dagitty("mag{
x -> y ; x -- u -- y
x [exposure]
y [outcome]
u [unobserved]
}")
g <- dagitty("mag{ a -- x -> y <-> z }")
ggdag(g)
dag<-dag {
dag {
g<-dagitty(dag {
g<-dagitty("dag {
bb="0,0,1,1"
g<-dagitty("dag {
Y [outcome]
u [latent]
x [exposure]
u -> Y
u -> x
x -> Y
}")
ggdag(dag)
ggdag(g)
ggdag_status(g)
ggdag_status(g) + theme_dag() + guides(fill = "none", color = "none") +geom_dag_edges(edge_linetype = "dashed")
dag <- dagify(y ~ x + u, x ~ u, latent = "u")
ggdag_status(dag)
dag <- dagify(y ~ x + u, x ~ u, latent = "u", coords = coord_dag)
ggdag_status(dag) + theme_dag()
dag <- counfounder_triangle()
confounder_triangle()
confounder_triangle() %>% ggdag()
ggdag_status(dag) + theme_dag_grey()
tidy_daggity(dag)
tidy_dagitty(dag)
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges_arc() +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges_arc() +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges() +
geom_dag_text() +
theme_dag()
dag <- dagify(y~x + u, x ~u, coords = coord_dag)
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges() +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = "dashed") +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = c("solid", "solid", dashed") +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = c("solid", "solid", "dashed") +
x<- confounder_triangle(x_y_associated = TRUE) %>%
tidy_dagitty() %>%
mutate(linetype = ifelse(name == "z", "dashed", "solid"))
View(x)
x$data
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"))
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = linetype) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = linetype) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid")) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = linetype) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid")) %>%
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = "linetype") +
geom_dag_text() +
theme_dag()
dag
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"))
ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = "linetype") +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(edge_linetype = "linetype") +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"), lincol = ifelse(name == "u", "grey", "black"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = lincol)) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(fill= lincol)) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"), lincol = ifelse(name == "u", "grey", "black"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend, color = lincol)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(u = 1, x = 0, y = 2), y = c(u = 0, x = 1, y = 1))
dag <- dagify(y~x + u, x ~u, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"), lincol = ifelse(name == "u", "grey", "black"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = lincol)) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_node(aes(color = lincol)) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(aes(color = lincol)) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(color = "grey") +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(color = c("black", "black","grey")) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(color = c("black", "grey","black")) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point(color = c("grey", "black","black")) +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
coord_dag<-list(x = c(z = 1, x = 0, y = 2), y = c(z = 0, x = 1, y = 1))
dag <- dagify(z~y, z~x, y~ x coords = coord_dag) %>%
coord_dag<-list(x = c(z = 1, x = 0, y = 2), y = c(z = 0, x = 1, y = 1))
dag <- dagify(z~y, z~x, y~ x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "z", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges() +
geom_dag_text() +
theme_dag()
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
install.packages("gtsummary")
library(gtsummary)
data %>% tbl_summary()
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = numeric(y1 - y0))
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
is.numeric(data$treateff)
?numeric()
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = as.numeric(y1 - y0))
is.numeric(data$treateff)
is.numeric(data$treat_eff)
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
is.numeric(data$treat_eff)
data %>% tbl_summary(statistic = all_continuous() ~ c("{median} ({p25}, {p75})", "{min}, {max}"),)
data %>% tbl_summary(statistic = all_continuous() ~ c("{median} ({p25}, {p75})", "{min}, {max}"))
data %>% tbl_summary(type = all_continuous() ~ "continuous2",statistic = all_continuous() ~ c("{median} ({p25}, {p75})", "{min}, {max}"))
data %>% tbl_summary(type = all_continuous() ~ "continuous2",statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>% tbl_summary(type = all_continuous() ~ "continuous2",statistic = all_continuous() ~ c("{mean}", "{min}, {max}"), type = list(treat_eff ~ "continuous"))
data %>% tbl_summary(type = list(all_continuous() ~ "continuous2",treat_eff ~ "continuous")statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>% tbl_summary(type = list(all_continuous() ~ "continuous2",treat_eff ~ "continuous"),statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>% tbl_summary(type = list(treat_eff ~ "continuous"),statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>% tbl_summary(type = list(treat_eff ~ "continuous", all_continuous() ~ "continuous2"),statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>% tbl_summary(type = list(treat_eff ~ "continuous", eta ~ "continuous2"),statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>% select(-eta) %>% tbl_summary(type = list(treat_eff ~ "continuous2", all_continuous() ~ "continuous2"),statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>%  tbl_summary(type = list(treat_eff ~ "continuous2", all_continuous() ~ "continuous2"),statistic = all_continuous() ~ c("{mean}", "{min}, {max}"))
data %>%  tbl_summary(type = list(treat_eff ~ "continuous"),statistic = all_continuous() ~ c("{mean},{min}, {max}"))
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
sumtable(data, summ=c('notNA(x)','mean(x)','min(x)', 'max(x)'), summ.names('N', 'Mean', 'Min', 'Max' ))
library(vtable)
data <- data.frame(eta=rnorm(100000,0,1)) %>%
mutate(y0 = 2 + eta, y1 = y0 + 5,
treat_eff = y1 - y0)
sumtable(data, summ=c('notNA(x)','mean(x)','min(x)', 'max(x)'), summ.names('N', 'Mean', 'Min', 'Max' ))
sumtable(data, summ=c('notNA(x)','mean(x)','min(x)', 'max(x)'), summ.names = c('N', 'Mean', 'Min', 'Max' ))
coord_dag<-list(x = c(x = 1, w = 0, y = 2, u=2), y = c(x = 0, w = 1, y = 1, u=0))
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "x", "dashed", "solid"))
library(tidyverse)
library(ggdag)
library(dagitty)
coord_dag<-list(x = c(x = 1, w = 0, y = 2, u=2), y = c(x = 0, w = 1, y = 1, u=0))
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "x", "dashed", "solid"))
View(dag)
View(dag[["data"]])
coord_dag<-list(x = c(x = 1, w = 0, y = 2, u=2), y = c(x = 0, w = 1, y = 1, u=0))
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges() +
geom_dag_text() +
theme_dag()
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
View(coord_dag)
View(dag)
View(dag[["data"]])
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u" | to = "u", "dashed", "solid"))
dag <- dagify(y~w+x+u, u~x, w~x, coords = coord_dag) %>%
tidy_dagitty() %>% mutate(linetype = ifelse(name == "u" | to == "u", "dashed", "solid"))
ggplot(dag,aes(x = x, y = y, xend = xend, yend = yend)) +
geom_dag_point() +
geom_dag_edges(aes(edge_linetype = linetype)) +
geom_dag_text() +
theme_dag()
